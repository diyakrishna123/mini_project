class Login(models.Model):
    username = models.CharField(max_length=100)
    password = models.CharField(max_length=100)
    type = models.CharField(max_length=100)

class User(models.Model):
    name = models.CharField(max_length=100)
    email = models.CharField(max_length=100)
    phone = models.CharField(max_length=100)
    gender = models.CharField(max_length=100)
    place= models.CharField(max_length=100)
    post = models.CharField(max_length=100)
    pin = models.CharField(max_length=100)
    LOGIN = models.ForeignKey(Login, on_delete=models.CASCADE)

class Service(models.Model):
    servicename = models.CharField(max_length=100)
    amount = models.CharField(max_length=100)
    description = models.CharField(max_length=100)


class Gallery(models.Model):
    photo1 = models.CharField(max_length=100)
    photo2 = models.CharField(max_length=100)
    photo3 = models.CharField(max_length=100)
    vedios = models.CharField(max_length=100)
    SERVICE = models.ForeignKey(Service, on_delete=models.CASCADE)

class Booking(models.Model):
    date = models.DateField()
    form_time = models.CharField(max_length=100)
    to_time = models.CharField(max_length=100,default='')
    status = models.CharField(max_length=100)
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    SERVICE= models.ForeignKey(Service, on_delete=models.CASCADE)

class Payment(models.Model):
    date = models.DateField()
    status = models.CharField(max_length=100)
    USER = models.ForeignKey(User, on_delete=models.CASCADE)
    BOOK = models.ForeignKey(Booking, on_delete=models.CASCADE)


class Complaint(models.Model):
    date = models.DateField()
    complaint = models.CharField(max_length=100)
    reply= models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    USER=models.ForeignKey(User,on_delete=models.CASCADE)


class Review(models.Model):
    date = models.DateField()
    review = models.CharField(max_length=100)
    rating = models.CharField(max_length=100)
    USER = models.ForeignKey(User, on_delete=models.CASCADE)
    SERVICE=models.ForeignKey(Service,on_delete=models.CASCADE)


